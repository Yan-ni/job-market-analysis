services:
  db:
    image: postgres
    container_name: jma-db
    restart: always
    env_file: .env
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  pgadmin:
    container_name: jma-pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
      - PGADMIN_DISABLE_POSTFIX=true
    ports:
      - 3030:80

  da-script:
    build: .
    container_name: jma-da-script
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./src:/app/src
    command: --query "data analyst"
  ds-script:
    build: .
    container_name: jma-ds-script
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./src:/app/src
    command: --query "data scientist"
  de-script:
    build: .
    container_name: jma-ds-script
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./src:/app/src
    command: --query "data engineer"
  update-deleted-script:
    build: .
    container_name: jma-db-update
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./src:/app/src
    command: --update-deleted
  data-cleaner:
    container_name: jma-data-cleaner
    build:
      dockerfile: cleaner.dockerfile
    volumes:
      - ./src/cleaners:/app
    env_file: .env
    depends_on:
      db:
        condition: service_healthy

volumes:
  pgdata:
